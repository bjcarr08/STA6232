---
title: "Project 1"
subtitle: "STA 6232 Stats for Data Science II"
author: "Brandy Carr"
format: 
  html:
    fontcolor: "#5F5D54"
    backgroundcolor: "#F9F8F1"
    toc: true
    number-sections: true
    number-depth: 2
    shift-heading-level-by: -1
    error: true
    smooth-scroll: true
execute: 
  warning: false
  message: false
editor: source
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(formattable)
```

**This week you will be analyzing data from the Jackson Heart Study (JHS). You can find the data on Canvas. For full credit, you must include all code chunks and R output backing up your responses.**

</br>

### 0 {.unnumbered}

Import the JHS data; you can download it from Canvas. You need to research how to read a SAS data file into R (hint: look into the `haven` package).

::: {.panel-tabset}

## Code

```{r}
#| eval: false
JHS <- haven::read_sas("analysis1.sas7bdat")
DT::datatable(head(JHS, n=10), filter="top") # first 10 rows of data
```

## Output

```{r}
#| echo: false
JHS <- haven::read_sas("analysis1.sas7bdat")
DT::datatable(head(JHS, n=10), filter="top") # first 10 rows of data
```

:::

</br>

###

#### 1a

Model systolic blood pressure (*sbp*; mmHg) as a function of age (*age*; years), education (*HSgrad*; 0=no, 1=yes), and body mass index (*BMI*; kg/m<sup>2</sup>). Remember to report the resulting model.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
# Checked for incomplete/missing cases
table(complete.cases(JHS %>% select(sbp, age, HSgrad, BMI)))

# removed incomplete cases
JHS1 <- JHS %>% select(sbp, age, HSgrad, BMI) %>% na.omit()

m1 <- glm(sbp ~ ., data=JHS1, family="gaussian")
summary(m1)
```

## Output

```{r}
#| echo: false
# Checked for incomplete/missing cases
table(complete.cases(JHS %>% select(sbp, age, HSgrad, BMI)))

# removed incomplete cases
JHS1 <- JHS %>% select(sbp, age, HSgrad, BMI) %>% na.omit()

m1 <- glm(sbp ~ ., data=JHS1, family="gaussian")
summary(m1)
```

## Results

*`11 rows containing missing data were removed`*

$\hat{sbp} = 95.04 + 0.44(age) - 0.84(HSgrad) + 0.24(BMI)$

:::

</br>

#### 1b

Construct the 95% confidence intervals for the regression coefficients. Remember to state the resulting confidence intervals.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
confint(m1)
```

## Output

```{r}
#| echo: false
confint(m1)
```

## Results

- 95% CI for $\beta_{age}$ is (0.39, 0.49)

- 95% CI for $\beta_{HSgrad}$ is (-2.51, 0.83)

- 95% CI for $\beta_{BMI}$ is (0.16, 0.32)

:::

</br>

#### 1c

Is this a significant regression line? Test at the $\alpha=0.05$ level. Remember to typeset the results.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
m0 <- glm(sbp ~ 1, data=JHS1, family="gaussian") # intercept only model
anova(m0, m1, test="F")
```

## Output

```{r}
#| echo: false
m0 <- glm(sbp ~ 1, data=JHS1, family="gaussian") # intercept only model
anova(m0, m1, test="F")
```

## Results

**Hypotheses:**

- $H_{0}$ : $\beta_{age} = \beta_{HSgrad} = \beta_{BMI} = 0$

- $H_{1}$ : at least one $\beta_{i} \ne 0$

**Test Statistic:** 

- $F_{0} = 122.13$

**P-Value:** 

- $p < 0.001$

**Rejection Region:** 

- $\alpha = 0.05$

- Reject $H_{0}$ if $p < \alpha$

**Conclusion:** 

- Reject $H_{0}$ 

- There is sufficient evidence to suggest that at least one slope is non-zero.

:::

</br> 

#### 1d

Which predictors, if any, are significant predictors of systolic blood pressure? Test at the $\alpha=0.05$ level. Remember to typeset the results.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
c1 <- data.frame(round(summary(m1)$coeff, 3)) # m1 coefficients rounded to 3 decimal places

colnames(c1)[c(2,4)] <- c("Std.Error", "p.value") # re-named 2 columns

formattable(
  c1, 
  list(
    t.value = color_tile("#FEFEB0", "#FEFEB0"),
    p.value = color_tile("#CDFFE0", "#CDFFE0")
    )
  )
```

## Output

```{r}
#| echo: false
c1 <- data.frame(round(summary(m1)$coeff, 3)) # m1 coefficients rounded to 3 decimal places

colnames(c1)[c(2,4)] <- c("Std.Error", "p.value") # re-named 2 columns

formattable(
  c1, 
  list(
    t.value = color_tile("#FEFEB0", "#FEFEB0"),
    p.value = color_tile("#CDFFE0", "#CDFFE0")
    )
  )
```

## Results: age

- **Hypotheses:**

  - $H_{0}$ : $\beta_{age} = 0$

  - $H_{1}$ : $\beta_{age} \ne 0$

- **Test Statistic:**

  - $t_{0} = 17.480$

- **P-Value:**

  - $p < 0.001$

- **Rejection Region:**

  - Reject $H_{0}$ if $p < \alpha;$ $\alpha = 0.05$

- **Conclusion:**

  - Reject $H_{0}.$ There is sufficient evidence to suggest that age significantly predicts systolic blood pressure (sbp).

## Results: HSgrad

- **Hypotheses:**

  - $H_{0}$ : $\beta_{HSgrad} = 0$

  - $H_{1}$ : $\beta_{HSgrad} \ne 0$

- **Test Statistic:**

  - $t_{0} = -0.983$

- **P-Value:**

  - $p = 0.326$

- **Rejection Region:**

  - Reject $H_{0}$ if $p < \alpha;$ $\alpha = 0.05$

- **Conclusion:**

  - Fail to reject $H_{0}.$ There is not sufficient evidence to suggest that High School Graduate (HSgrad) significantly predicts systolic blood pressure (sbp).

## Results: BMI

- **Hypotheses:**

  - $H_{0}$ : $\beta_{BMI} = 0$

  - $H_{1}$ : $\beta_{BMI} \ne 0$

- **Test Statistic:**

  - $t_{0} = 5.870$

- **P-Value:**

  - $p < 0.001$

- **Rejection Region:**

  - Reject $H_{0}$ if $p < \alpha;$ $\alpha = 0.05$

- **Conclusion:**

  - Reject $H_{0}.$ There is sufficient evidence to suggest that Body Mass Index (BMI) significantly predicts systolic blood pressure (sbp).
  
:::

</br>

#### 1e

Provide brief interpretations for the slopes of the predictors.

::: {.panel-tabset}

## Results

- For every $1\phantom/year$ increase in age, systolic blood pressure increases by $0.44 \phantom0 mmHg$

- Those that are high school graduates have a systolic blood pressure $0.84 \phantom0 mmHg$ lower than those that did not graduate high school. 

- For every $1\phantom/kg/m^{2}$ increase in BMI, systolic blood pressure increases by $0.24 \phantom0 mmHg$

:::

</br>

#### 1f

Construct an appropriate data visualization to help with explaining the model results. Systolic blood pressure should be on the y-axis, age should be on the x-axis. You choose what lines to create.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
JHS1 <- JHS1 %>% 
  mutate(y_hat_HSgrad.NO_BMI.20 = c1[1,1] + c1[2,1]*age + c1[3,1]*0 + c1[4,1]*20,
         y_hat_HSgrad.NO_BMI.40 = c1[1,1] + c1[2,1]*age + c1[3,1]*0 + c1[4,1]*40,
         y_hat_HSgrad.NO_BMI.60 = c1[1,1] + c1[2,1]*age + c1[3,1]*0 + c1[4,1]*60)

JHS1$HSgrad.factor <- factor(JHS1$HSgrad, levels = c(0, 1), labels = c("No", "Yes"))

JHS1 %>% 
  ggplot(aes(x = age)) +
  geom_point(aes(y = sbp, shape = HSgrad.factor, fill = HSgrad.factor, color = HSgrad.factor), 
             size = 2, 
             alpha = 0.7) +
  scale_shape_manual(values = c(24, 21)) +
  scale_fill_manual(values = c("paleturquoise1", "cornsilk1")) +
  scale_color_manual(values = c("paleturquoise4", "cornsilk4")) +
  geom_line(aes(y = y_hat_HSgrad.NO_BMI.20), color = "darkorchid4", linewidth = 1.5, linetype = 3) +
  geom_line(aes(y = y_hat_HSgrad.NO_BMI.40), color = "darkorchid3", linewidth = 1, linetype = 2) +
  geom_line(aes(y = y_hat_HSgrad.NO_BMI.60), color = "darkorchid1", linewidth = 1, linetype = 1) +
  geom_text(aes(x = 85, y = 137, label = "BMI = 20"), color = "darkorchid4", hjust = "left") +
  geom_text(aes(x = 85, y = 142, label = "BMI = 40"), color = "darkorchid3", hjust = "left") +
  geom_text(aes(x = 85, y = 147, label = "BMI = 60"), color = "darkorchid1", hjust = "left") +
  scale_x_continuous(breaks = seq(20,90,10), limits=c(NA,90)) +
  labs(
    x = "Age", 
    y = "Systolic Blood Pressure", 
    #title = expression(paste(hat(sbp)," = 95.04 + 0.44(age) - 0.84(HSgrad = 0) + 0.24(BMI: 20,40,60)")),
    color = "High School Graduate", 
    shape = "High School Graduate", 
    fill = "High School Graduate") +
  ylim(NA, 170) +
  theme_bw() +
  theme(
    title = element_text(size = 12, face = "bold", color = colorspace::darken("cornsilk4", 0.3)),
    #plot.title = element_text(size = 14, face = "bold"),
    legend.position = "top", 
    legend.justification = "center",
    legend.key = element_rect(fill = "#F9F8F1"),
    #legend.title = element_text(size = 12, color = "cornsilk4"),
    legend.text = element_text(size = 11, color = colorspace::darken("cornsilk4", 0.3)),
    legend.background = element_rect(fill = "#F9F8F1"),
    plot.background = element_rect(fill = "#F9F8F1", color = "#F9F8F1"))
```

## Output

```{r}
#| echo: false
JHS1 <- JHS1 %>% 
  mutate(y_hat_HSgrad.NO_BMI.20 = c1[1,1] + c1[2,1]*age + c1[3,1]*0 + c1[4,1]*20,
         y_hat_HSgrad.NO_BMI.40 = c1[1,1] + c1[2,1]*age + c1[3,1]*0 + c1[4,1]*40,
         y_hat_HSgrad.NO_BMI.60 = c1[1,1] + c1[2,1]*age + c1[3,1]*0 + c1[4,1]*60)

JHS1$HSgrad.factor <- factor(JHS1$HSgrad, levels = c(0, 1), labels = c("No", "Yes"))

JHS1 %>% 
  ggplot(aes(x = age)) +
  geom_point(aes(y = sbp, shape = HSgrad.factor, fill = HSgrad.factor, color = HSgrad.factor), 
             size = 2, 
             alpha = 0.7) +
  scale_shape_manual(values = c(24, 21)) +
  scale_fill_manual(values = c("paleturquoise1", "cornsilk1")) +
  scale_color_manual(values = c("paleturquoise4", "cornsilk4")) +
  geom_line(aes(y = y_hat_HSgrad.NO_BMI.20), color = "darkorchid4", linewidth = 1.5, linetype = 3) +
  geom_line(aes(y = y_hat_HSgrad.NO_BMI.40), color = "darkorchid3", linewidth = 1, linetype = 2) +
  geom_line(aes(y = y_hat_HSgrad.NO_BMI.60), color = "darkorchid1", linewidth = 1, linetype = 1) +
  geom_text(aes(x = 85, y = 137, label = "BMI = 20"), color = "darkorchid4", hjust = "left") +
  geom_text(aes(x = 85, y = 142, label = "BMI = 40"), color = "darkorchid3", hjust = "left") +
  geom_text(aes(x = 85, y = 147, label = "BMI = 60"), color = "darkorchid1", hjust = "left") +
  scale_x_continuous(breaks = seq(20,90,10), limits=c(NA,90)) +
  labs(
    x = "Age", 
    y = "Systolic Blood Pressure", 
    #title = expression(paste(hat(sbp)," = 95.04 + 0.44(age) - 0.84(HSgrad = 0) + 0.24(BMI: 20,40,60)")),
    color = "High School Graduate", 
    shape = "High School Graduate", 
    fill = "High School Graduate") +
  ylim(NA, 170) +
  theme_bw() +
  theme(
    title = element_text(size = 12, face = "bold", color = colorspace::darken("cornsilk4", 0.3)),
    #plot.title = element_text(size = 14, face = "bold"),
    legend.position = "top", 
    legend.justification = "center",
    legend.key = element_rect(fill = "#F9F8F1"),
    #legend.title = element_text(size = 12, color = "cornsilk4"),
    legend.text = element_text(size = 11, color = colorspace::darken("cornsilk4", 0.3)),
    legend.background = element_rect(fill = "#F9F8F1"),
    plot.background = element_rect(fill = "#F9F8F1", color = "#F9F8F1"))
```

:::

</br>

#### 1g

How many suspected outliers exist? You must justify your answer statistically.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
JHS1 <- JHS1 %>% mutate(outlier = ifelse(abs(rstandard(m1)) > 2.5, "Suspected", "Not Suspected"))

formattable(
  count(JHS1, outlier) %>% mutate(outlier = factor(outlier)), 
  align = "l",
  list(
    outlier = color_tile("#F9F8F1", alpha("plum1", 0.5)),
    n = color_tile(alpha("plum1", 0.5), "#F9F8F1")
    )
  )

JHS1 %>% 
  ggplot(aes(x = age, y = sbp)) +
  geom_point(aes(color = outlier, fill = outlier), shape = 21, size = 2.5) +
  scale_color_manual(values = c("cornsilk3", "plum3")) +
  scale_fill_manual(values = c("cornsilk2", "plum1")) +
  labs(
    x = "Age",
    y = "Systolic Blood Pressure",
    color = "Outlier",
    fill = "Outlier") +
  theme_bw() +
  theme(
    title = element_text(size = 12, face = "bold", color = colorspace::darken("cornsilk4", 0.3)),
    legend.position = "top", 
    legend.justification = "center",
    legend.key = element_rect(fill = "#F9F8F1"),
    #legend.title = element_text(size = 12, color = "cornsilk4"),
    legend.text = element_text(size = 11, colorspace::darken("cornsilk4", 0.3)),
    legend.background = element_rect(fill = "#F9F8F1"),
    plot.background = element_rect(fill = "#F9F8F1", color = "#F9F8F1"))
```

## Output

```{r}
#| echo: false
JHS1 <- JHS1 %>% mutate(outlier = ifelse(abs(rstandard(m1)) > 2.5, "Suspected", "Not Suspected"))

formattable(
  count(JHS1, outlier) %>% mutate(outlier = factor(outlier)), 
  align = "l",
  list(
    outlier = color_tile("#F9F8F1", alpha("plum1", 0.5)),
    n = color_tile(alpha("plum1", 0.5), "#F9F8F1")
    )
  )

JHS1 %>% 
  ggplot(aes(x = age, y = sbp)) +
  geom_point(aes(color = outlier, fill = outlier), shape = 21, size = 2.5) +
  scale_color_manual(values = c("cornsilk3", "plum3")) +
  scale_fill_manual(values = c("cornsilk2", "plum1")) +
  labs(
    x = "Age",
    y = "Systolic Blood Pressure",
    color = "Outlier",
    fill = "Outlier") +
  theme_bw() +
  theme(
    title = element_text(size = 12, face = "bold", color = colorspace::darken("cornsilk4", 0.3)),
    legend.position = "top", 
    legend.justification = "center",
    legend.key = element_rect(fill = "#F9F8F1"),
    #legend.title = element_text(size = 12, color = "cornsilk4"),
    legend.text = element_text(size = 11, colorspace::darken("cornsilk4", 0.3)),
    legend.background = element_rect(fill = "#F9F8F1"),
    plot.background = element_rect(fill = "#F9F8F1", color = "#F9F8F1"))
```

:::

</br>

#### 1h

How many suspected influential/leverage points exist? You must justify your answer statistically.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
new.x = as.numeric(names(cooks.distance(m1)[cooks.distance(m1) > 0.01]))
new.y = as.vector(cooks.distance(m1)[cooks.distance(m1) > 0.01])

formattable(JHS1[new.x, -c(5:8)], align = "l")

classpackage::cooks(m1, show.threshold = T, label = F) +
  geom_point() + 
  ylim(NA, 0.02) +
  
  geom_point(aes(x = new.x[1], y = new.y[1]), size = 3, shape = 21, color = "darkorchid", fill = "darkorchid1") +
  geom_point(aes(x = new.x[2], y = new.y[2]), size = 3, shape = 21, color = "plum3", fill = "plum1") +
  geom_point(aes(x = new.x[3], y = new.y[3]), size = 3, shape = 21, color = "darkorchid", fill = "darkorchid1") +
  geom_point(aes(x = new.x[4], y = new.y[4]), size = 3, shape = 21, color = "plum3", fill = "plum1") +
  geom_point(aes(x = new.x[5], y = new.y[5]), size = 3, shape = 21, color = "darkorchid", fill = "darkorchid1") +
  geom_point(aes(x = new.x[6], y = new.y[6]), size = 3, shape = 21, color = "plum3", fill = "plum1") +
  geom_point(aes(x = new.x[7], y = new.y[7]), size = 3, shape = 21, color = "darkorchid", fill = "darkorchid1") +
  geom_point(aes(x = new.x[8], y = new.y[8]), size = 3, shape = 21, color = "plum3", fill = "plum1") +
  geom_point(aes(x = new.x[9], y = new.y[9]), size = 3, shape = 21, color = "plum3", fill = "plum1") +
  
  geom_text(aes(x = new.x[1], y = new.y[1]+0.0008, label = new.x[1]), color = "darkorchid", hjust = "center") +
  geom_text(aes(x = new.x[2], y = new.y[2]+0.0008, label = new.x[2]), color = "plum3", hjust = "center") +
  geom_text(aes(x = new.x[3], y = new.y[3]+0.0008, label = new.x[3]), color = "darkorchid", hjust = "center") +
  geom_text(aes(x = new.x[4], y = new.y[4]+0.0008, label = new.x[4]), color = "plum3", hjust = "center") +
  geom_text(aes(x = new.x[5], y = new.y[5]+0.0008, label = new.x[5]), color = "darkorchid", hjust = "center") +
  geom_text(aes(x = new.x[6], y = new.y[6]+0.0008, label = new.x[6]), color = "plum3", hjust = "center") +
  geom_text(aes(x = new.x[7], y = new.y[7]+0.0008, label = new.x[7]), color = "darkorchid", hjust = "center") +
  geom_text(aes(x = new.x[8], y = new.y[8]+0.0008, label = new.x[8]), color = "plum3", hjust = "center") +
  geom_text(aes(x = new.x[9], y = new.y[9]+0.0008, label = new.x[9]), color = "plum3", hjust = "center") +
  
  theme(
    title = element_text(size=11, face="bold"),
    plot.background = element_rect(fill="#F9F8F1"))
```

## Output

```{r}
#| echo: false
new.x = as.numeric(names(cooks.distance(m1)[cooks.distance(m1) > 0.01]))
new.y = as.vector(cooks.distance(m1)[cooks.distance(m1) > 0.01])

formattable(JHS1[new.x, -c(5:8)], align = "l")

classpackage::cooks(m1, show.threshold = T, label = F) +
  geom_point() + 
  ylim(NA, 0.02) +
  
  geom_point(aes(x = new.x[1], y = new.y[1]), size = 3, shape = 21, color = "darkorchid", fill = "darkorchid1") +
  geom_point(aes(x = new.x[2], y = new.y[2]), size = 3, shape = 21, color = "plum3", fill = "plum1") +
  geom_point(aes(x = new.x[3], y = new.y[3]), size = 3, shape = 21, color = "darkorchid", fill = "darkorchid1") +
  geom_point(aes(x = new.x[4], y = new.y[4]), size = 3, shape = 21, color = "plum3", fill = "plum1") +
  geom_point(aes(x = new.x[5], y = new.y[5]), size = 3, shape = 21, color = "darkorchid", fill = "darkorchid1") +
  geom_point(aes(x = new.x[6], y = new.y[6]), size = 3, shape = 21, color = "plum3", fill = "plum1") +
  geom_point(aes(x = new.x[7], y = new.y[7]), size = 3, shape = 21, color = "darkorchid", fill = "darkorchid1") +
  geom_point(aes(x = new.x[8], y = new.y[8]), size = 3, shape = 21, color = "plum3", fill = "plum1") +
  geom_point(aes(x = new.x[9], y = new.y[9]), size = 3, shape = 21, color = "plum3", fill = "plum1") +
  
  geom_text(aes(x = new.x[1], y = new.y[1]+0.0008, label = new.x[1]), color = "darkorchid", hjust = "center") +
  geom_text(aes(x = new.x[2], y = new.y[2]+0.0008, label = new.x[2]), color = "plum3", hjust = "center") +
  geom_text(aes(x = new.x[3], y = new.y[3]+0.0008, label = new.x[3]), color = "darkorchid", hjust = "center") +
  geom_text(aes(x = new.x[4], y = new.y[4]+0.0008, label = new.x[4]), color = "plum3", hjust = "center") +
  geom_text(aes(x = new.x[5], y = new.y[5]+0.0008, label = new.x[5]), color = "darkorchid", hjust = "center") +
  geom_text(aes(x = new.x[6], y = new.y[6]+0.0008, label = new.x[6]), color = "plum3", hjust = "center") +
  geom_text(aes(x = new.x[7], y = new.y[7]+0.0008, label = new.x[7]), color = "darkorchid", hjust = "center") +
  geom_text(aes(x = new.x[8], y = new.y[8]+0.0008, label = new.x[8]), color = "plum3", hjust = "center") +
  geom_text(aes(x = new.x[9], y = new.y[9]+0.0008, label = new.x[9]), color = "plum3", hjust = "center") +
  
  theme(
    title = element_text(size=11, face="bold"),
    plot.background = element_rect(fill="#F9F8F1"))
```

:::

</br>

#### 1i

Is multicollinearity a problem in this model? You must justify your answer statistically.

$VIF_{j} \phantom0 = \phantom0 \frac{1}{1-R^{2}_j}$

$VIF \gt 10$

::: {.panel-tabset}

## Code

```{r}
#| eval: false
car::vif(m1)
```

## Output

```{r}
#| echo: false
car::vif(m1)
```

## Results

No multicollinearity is present.

:::

</br>

#### 1j

Assess the assumptions on the linear model. Remember to draw your conclusion with appropriate justification.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
classpackage::anova_check(m1)

## qqplot with color formatting
# car::qqPlot(
#  MASS::stdres(m1),
#  col="darkorchid", 
#  col.lines="plum2")
```

## Output

```{r}
#| echo: false
classpackage::anova_check(m1)

## qqplot with color formatting
# car::qqPlot(
#  MASS::stdres(m1),
#  col="darkorchid", 
#  col.lines="plum2")
```

:::

</br>

</br>

###

#### 2a

Model systolic blood pressure (*sbp*; mmHg) as a function of age (*age*; years), education (*HSgrad*; 0=no, 1=yes), and health status as defined by body mass index (*BMI3cat*; 0=poor health, 1=intermediate health, 2=ideal health). Remember to report the resulting model.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
# check for incomplete/missing cases (11 rows with missing data)
table(complete.cases(JHS %>% select(sbp, age, HSgrad, BMI3cat)))

# remove incomplete cases
JHS2 <- JHS %>% select(sbp, age, HSgrad, BMI3cat) %>% na.omit() 

# create dummy vars for BMI3cat
JHS2 <- JHS2 %>% fastDummies::dummy_cols(select_columns = "BMI3cat")

# model - reference group: BMI3cat_0 (poor health)
m2 <- glm(sbp ~ BMI3cat_1 + BMI3cat_2 + age + HSgrad, data = JHS2, family="gaussian")
summary(m2)
```

## Output

```{r}
#| echo: false
# check for incomplete/missing cases (11 rows with missing data)
table(complete.cases(JHS %>% select(sbp, age, HSgrad, BMI3cat)))

# remove incomplete cases
JHS2 <- JHS %>% select(sbp, age, HSgrad, BMI3cat) %>% na.omit() 

# create dummy vars for BMI3cat
JHS2 <- JHS2 %>% fastDummies::dummy_cols(select_columns = "BMI3cat")

# model - reference group: BMI3cat_0 (poor health)
m2 <- glm(sbp ~ BMI3cat_1 + BMI3cat_2 + age + HSgrad, data = JHS2, family="gaussian")
summary(m2)
```

## Results

*`11 rows containing missing data were removed`*

**Reference Group:** BMI3cat_0 (poor health) 

$\hat{sbp} = 104.36 - 2.17(BMI3cat\_1) - 3.14(BMI3cat\_2) + 0.44(age) - 0.92(HSgrad)$

:::

</br>

#### 2b

Construct the 95% confidence intervals for the regression coefficients. Remember to state the resulting confidence intervals.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
confint(m2)
```

## Output

```{r}
#| echo: false
confint(m2)
```

## Results

- 95% CI for $\beta_{BMI3cat\_1}$ is (-3.41, -0.94)

- 95% CI for $\beta_{BMI3cat\_2}$ is (-4.86, -1.42)

- 95% CI for $\beta_{age}$ is (0.39, 0.49)

- 95% CI for $\beta_{HSgrad}$ is (-2.60, 0.76)

:::

</br>

#### 2c

Which predictors, if any, are significant predictors of systolic blood pressure? Test at the $\alpha=0.05$ level. Remember to typeset the results.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
JHS2$Health <- factor(
  JHS2$BMI3cat, 
  levels = c(0, 1, 2), 
  labels = c("Poor", "Intermediate", "Ideal"))

m2 <- glm(sbp ~ Health + age + HSgrad, data = JHS2, family="gaussian")

car::Anova(m2, type = 3)
```

## Output

```{r}
#| echo: false
JHS2$Health <- factor(JHS2$BMI3cat, levels = c(0, 1, 2), labels = c("Poor", "Intermediate", "Ideal"))
m2 <- glm(sbp ~ Health + age + HSgrad, data = JHS2, family="gaussian")
#summary(m3)
car::Anova(m2, type = 3)
```

## Results: Health

*`Factored BMI3cat and renamed variable to Health`*

**Model:**

$\hat{sbp} = 104.36 - 2.17(HealthIntermediate) - 3.14(HealthIdeal) + 0.44(age) - 0.92(HSgrad)$

**Hypotheses:**

- $H_{0}$ : $\beta_{HealthIntermediate} = \beta_{HealthIdeal} = 0$ in the specified model

- $H_{1}$ : at least one $\beta_{i} \ne 0$ in the specified model

**Test Statistic:** 

- $\chi^2_{0} = 19.41$

**P-Value:** 

- $p < 0.001$

**Rejection Region:** 

- $\alpha = 0.05$

- Reject $H_{0}$ if $p < \alpha$

**Conclusion:** 

- Reject $H_{0}$ 

- There is sufficient evidence to suggest that there is a relationship between systolic blood pressure (`sbp`) and health status as defined by body mass index (`Health`).

## Results: age

*`Factored BMI3cat and renamed variable to Health`*

**Model:**

$\hat{sbp} = 104.36 - 2.17(HealthIntermediate) - 3.14(HealthIdeal) + 0.44(age) - 0.92(HSgrad)$

**Hypotheses:**

- $H_{0}$ : $\beta_{age} = 0$ in the specified model

- $H_{1}$ : $\beta_{age} \ne 0$ in the specified model

**Test Statistic:** 

- $\chi^2_{0} = 291.78$

**P-Value:** 

- $p < 0.001$

**Rejection Region:** 

- $\alpha = 0.05$

- Reject $H_{0}$ if $p < \alpha$

**Conclusion:** 

- Reject $H_{0}$ 

- There is sufficient evidence to suggest that there is a relationship between systolic blood pressure (`sbp`) and `age`.

## Results: HSgrad

*`Factored BMI3cat and renamed variable to Health`*

**Model:**

$\hat{sbp} = 104.36 - 2.17(HealthIntermediate) - 3.14(HealthIdeal) + 0.44(age) - 0.92(HSgrad)$

**Hypotheses:**

- $H_{0}$ : $\beta_{HSgrad} = 0$ in the specified model

- $H_{1}$ : $\beta_{HSgrad} \ne 0$ in the specified model

**Test Statistic:** 

- $\chi^2_{0} = 1.146$

**P-Value:** 

- $p = 0.284$

**Rejection Region:** 

- $\alpha = 0.05$

- Reject $H_{0}$ if $p < \alpha$

**Conclusion:** 

- Fail to reject $H_{0}$ 

- There is not sufficient evidence to suggest that there is a relationship between systolic blood pressure (`sbp`) and whether or not someone graduated high school (`HSgrad`).

:::

</br>

#### 2d

Provide brief interpretations for the slopes of the predictors.

::: {.panel-tabset}

## Results

**Reference Group:** HealthPoor (previously BMI3cat_0)

$\hat{sbp} = 104.36 - 2.17(HealthIntermediate) - 3.14(HealthIdeal) + 0.44(age) - 0.92(HSgrad)$

- Those that have intermediate health status have a systolic blood pressure $2.17 \phantom0 mmHg$ lower than those with poor health status.

- Those that have ideal health status have a systolic blood pressure $3.14 \phantom0 mmHg$ lower than those with poor health status.

- For every $1 \phantom0 year$ increase in age, systolic blood pressure increases by $0.44 \phantom0 mmHg$

- Those who graduated high school have a systolic blood pressure $0.92 \phantom0 mmHg$ lower than those who did not graduate high school.

:::

</br>

#### 2e

Construct an appropriate data visualization to help with explaining the model results. Systolic blood pressure should be on the y-axis, age should be on the x-axis. You choose what lines to create.

::: {.panel-tabset}

## Code

```{r}
#| eval: false
formattable(cbind("BMI" = JHS1$BMI, JHS2) %>% 
              group_by(Health) %>% 
              summarise("Avg BMI" = mean(BMI)),
            align = "l")

interactions::interact_plot(m2, 
                            pred = age, 
                            modx = Health, 
                            mod2 = HSgrad,
                            plot.points = T, 
                            colors = c("mediumorchid2", "cornsilk4", "turquoise3"),
                            point.alpha = 0.2) + 
  ylim(NA, 170) +
  theme_bw() +
  theme(
    title = element_text(size = 11, face = "bold", color = colorspace::darken("cornsilk4", 0.4)),
    legend.position = "top", 
    legend.justification = "center",
    legend.key.width = unit(1.5, "cm"),
    legend.key = element_rect(fill = "#F9F8F1"),
    legend.text = element_text(size = 10, colorspace::darken("cornsilk4", 0.4)),
    legend.background = element_rect(fill = "#F9F8F1"),
    plot.background = element_rect(fill = "#F9F8F1", color = "#F9F8F1"))
```

## Output

```{r}
#| echo: false
formattable(cbind("BMI" = JHS1$BMI, JHS2) %>% 
              group_by(Health) %>% 
              summarise("Avg BMI" = mean(BMI)),
            align = "l")

interactions::interact_plot(m2, 
                            pred = age, 
                            modx = Health, 
                            mod2 = HSgrad,
                            plot.points = T, 
                            colors = c("mediumorchid2", "cornsilk4", "turquoise3"),
                            point.alpha = 0.2) + 
  ylim(NA, 170) +
  theme_bw() +
  theme(
    title = element_text(size = 11, face = "bold", color = colorspace::darken("cornsilk4", 0.4)),
    legend.position = "top", 
    legend.justification = "center",
    legend.key.width = unit(1.5, "cm"),
    legend.key = element_rect(fill = "#F9F8F1"),
    legend.text = element_text(size = 10, colorspace::darken("cornsilk4", 0.4)),
    legend.background = element_rect(fill = "#F9F8F1"),
    plot.background = element_rect(fill = "#F9F8F1", color = "#F9F8F1"))
```

:::

</br>

</br>

###

Required for graduate students / extra credit for undergraduate students: Write a paragraph to summarize the above analysis, written such that a non-quantitative person could understand. Include if you recommend using BMI as a continuous variable or a categorical variable. For full credit, you must explain your reasoning.

::: {.panel-tabset}

## Results

:::
